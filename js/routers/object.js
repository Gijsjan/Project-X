// Generated by CoffeeScript 1.3.1
(function() {

  define(['switchers/views.edit', 'switchers/views.full', 'switchers/collections', 'switchers/models', 'views/content/list', 'helper'], function(EditViews, FullViews, Collections, Models, vContentList, helper) {
    return Backbone.Router.extend({
      routes: {
        ":object_type/add": "edit",
        ":object_type/edit/:id": "edit",
        ":object_type/:id": "show",
        ":object_types": "collection"
      },
      add: function(object_type) {
        var add, data, parent_type;
        parent_type = helper.getParentType(object_type);
        data = {
          object_type: object_type,
          className: parent_type + ' ' + object_type,
          model: new Models[object_type]()
        };
        add = new EditViews[object_type](data);
        return $('div#main').html(add.render().$el);
      },
      show: function(object_type, id) {
        var data, full, parent_type;
        parent_type = helper.getParentType(object_type);
        data = {
          object_type: object_type,
          object_id: id,
          className: parent_type + ' full ' + object_type,
          id: 'object-' + id,
          model: new Models[object_type]({
            id: id
          })
        };
        full = new FullViews[object_type](data);
        return $('div#main').html(full.$el);
      },
      edit: function(object_type, id) {
        var data, ev, parent_type;
        parent_type = helper.getParentType(object_type);
        data = {
          object_type: object_type,
          className: parent_type + ' edit ' + object_type,
          model: new Models[object_type]()
        };
        if (id != null) {
          data.id = 'object-' + id;
          data.object_id = id;
          data.model = new Models[object_type]({
            id: id
          });
        } else {
          data.model = new Models[object_type]();
        }
        ev = new EditViews[object_type](data);
        return $('div#main').html(ev.render().$el);
      },
      collection: function(object_types) {
        var v;
        v = new vContentList({
          'collection': new Collections[object_types]()
        });
        return $('div#main').html(v.$el);
      }
    });
  });

}).call(this);
