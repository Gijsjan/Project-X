// Generated by CoffeeScript 1.3.1
(function() {

  define(['text!../../../templates/main/pagination'], function(tpl) {
    return Backbone.View.extend({
      currentPage: 0,
      itemsPerPage: 3,
      totalPages: 0,
      totalItems: 0,
      pageDivs: [],
      id: 'pagination-wrapper',
      events: {
        "click li.pgn-nav-elem": "changePage2"
      },
      initialize: function() {
        this.totalItems = this.options.totalItems;
        return this.totalPages = Math.ceil(this.totalItems / this.itemsPerPage);
      },
      addPage: function() {
        var pageDiv;
        this.currentPage++;
        pageDiv = $('<div />').attr('class', 'page index-' + this.currentPage);
        return this.pageDivs[this.currentPage - 1] = pageDiv;
      },
      addItem: function(index, itemDiv) {
        if (index % this.itemsPerPage === 0) {
          this.addPage();
        }
        return this.pageDivs[this.currentPage - 1].append(itemDiv);
      },
      render: function() {
        var _this = this;
        this.currentPage = 1;
        this.$el.html(_.template(tpl, {
          totalPages: this.totalPages
        }));
        _.each(this.pageDivs, function(pageDiv) {
          return _this.$('#item-wrapper').append(pageDiv);
        });
        this.showPage(1);
        return this;
      },
      renderNavigation: function() {
        this.$('li.pgn-nav-elem').removeClass('greyed-out');
        this.$('li[data-page-number="' + this.currentPage + '"]').addClass('greyed-out');
        if (this.currentPage === 1) {
          this.$('li.previous').addClass('greyed-out');
        }
        if (this.currentPage === this.totalPages) {
          return this.$('li.next').addClass('greyed-out');
        }
      },
      changePage2: function(e) {
        var pagenumber, target;
        target = $(e.currentTarget);
        if (!target.hasClass('greyed-out')) {
          pagenumber = target.attr('data-page-number');
          if (pagenumber != null) {
            return this.showPage(pagenumber);
          } else if (target.hasClass('previous')) {
            return this.showPage(this.currentPage - 1);
          } else if (target.hasClass('next')) {
            return this.showPage(this.currentPage + 1);
          }
        }
      },
      showPage: function(pageNumber) {
        this.pageDivs[this.currentPage - 1].hide();
        this.currentPage = pageNumber;
        this.renderNavigation();
        return this.pageDivs[this.currentPage - 1].show();
      }
    });
  });

}).call(this);
