// Generated by CoffeeScript 1.3.1
(function() {

  define(function(require) {
    var $, Backbone, cContentList, vListedContent, vPagination, vSelector, _;
    $ = require('jquery');
    _ = require('underscore');
    Backbone = require('backbone');
    vListedContent = require('views/content/listed');
    vPagination = require('views/main/pagination');
    vSelector = require('views/main/selector');
    cContentList = require('collections/contentlist/contentlist');
    return Backbone.View.extend({
      id: 'contentlist',
      initialize: function() {
        var _this = this;
        if (this.collection == null) {
          this.collection = new cContentList();
        }
        if (this.options.tag != null) {
          this.collection.url = '/api/tag' + this.options.tag;
        }
        if (this.options.country != null) {
          this.colleciton.url = 'api/country' + this.options.country;
        }
        if (this.collection.length === 0) {
          return this.collection.fetch({
            success: function(collection, response) {
              _this.render();
              _this.selector = new vSelector({
                collection: collection,
                base_collection: _.clone(collection)
              });
              _this.selector.render();
              _this.selector.collection.bind('reset', _this.render, _this);
            },
            error: function(collection, response) {
              if (response.status === 401) {
                _this.navigate('login');
              }
            }
          });
        }
      },
      render: function() {
        var pgn;
        pgn = new vPagination({
          totalItems: this.collection.length
        });
        this.collection.each(function(model, index) {
          var t;
          t = new vListedContent({
            id: 'object-' + model.get('id'),
            className: 'content listed ' + model.get('type'),
            model: model
          });
          return pgn.addItem(index, t.render().$el);
        });
        this.$el.html(pgn.render().$el);
        return this;
      }
    });
  });

}).call(this);
